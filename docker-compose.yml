services:
  agent:
    container_name: qalita-agent
    image: qalita/agent:latest
    tty: true
    environment:
      - POETRY_INSTALLER_MAX_WORKER=10
      - POETRY_VIRTUALENVS_CREATE=false
      - QALITA_AGENT_NAME=test-agent
      - QALITA_AGENT_MODE=worker
      - QALITA_AGENT_ENDPOINT=http://backend:3080/api/v1
      - QALITA_AGENT_TOKEN=
    volumes:
      - ./:/app/agent
      - /home/user/data:/home/user/data
      - /home/user/.qalita:/root/.qalita
    command: "agent run"
    networks:
      - frontend_default
  postgres:
    image: postgres:16
    container_name: tests-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app_db
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./data:/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10

  mysql:
    image: mysql:8.0
    container_name: tests-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=app_db
      - MYSQL_USER=app
      - MYSQL_PASSWORD=app
    command: --default-authentication-plugin=mysql_native_password --local-infile=ON
    ports:
      - "3307:3306"
    volumes:
      - mysqldata:/var/lib/mysql
      - ./data:/data
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -proot | grep 'mysqld is alive' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20

  oracle:
    image: gvenzl/oracle-free
    container_name: tests-oracle
    restart: unless-stopped
    environment:
      - ORACLE_PASSWORD=oracle
      - APP_USER=app
      - APP_USER_PASSWORD=app
      - ORACLE_CHARACTERSET=AL32UTF8
    ports:
      - "1522:1521"
    volumes:
      - oradata:/opt/oracle/oradata
      - ./data:/data
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/healthcheck.sh"]
      interval: 20s
      timeout: 10s
      retries: 30

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: tests-mssql
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1434:1433"
    volumes:
      - mssqldata:/var/opt/mssql
      - ./data:/data
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'echo > /dev/tcp/127.0.0.1/1433'"]
      interval: 10s
      timeout: 5s
      retries: 30

networks:
  frontend_default:
    external: true

volumes:
  pgdata:
  mysqldata:
  oradata:
  mssqldata:
